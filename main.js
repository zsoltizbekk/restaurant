(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>h});var o=t(537),a=t.n(o),i=t(645),r=t.n(i),c=t(667),s=t.n(c),A=new URL(t(318),t.b),d=new URL(t(836),t.b),m=new URL(t(868),t.b),l=r()(a()),u=s()(A),p=s()(d),f=s()(m);l.push([n.id,"@font-face {\n    font-family: 'myfont';\n    src: url("+u+");\n}\n\n@font-face {\n    font-family: 'myfont2';\n    src: url("+p+");\n}\n\n:root {\n    --footerheight: max(3vh, 30px);\n    --headerhight: max(7vh, 50px);\n}\n\n\nbody {\n    margin: 0;\n    margin-right: 0;\n    padding: 0;\n    height: 100vh;\n}\n\n#content {\n    background-image: url("+f+');\n    background-size:100vw;\n    background-size: cover;\n    height: 100vh;\n    min-height: 400px;\n    \n}  \n\n.body {\n    font-family: myfont;\n    margin-left: 45vw;\n    height: 90vh;\n    font-size: max(1rem ,2.5vw);\n    text-align: center;\n    margin: 0px;\n    gap: 20px;\n}\n\n.header {\n    font-family: MyFont, Roboto;\n    display: flex;\n    background-color: #383838;\n    opacity: 0.9;\n    flex-direction: row;\n    justify-content: space-around;\n    margin-bottom: 10px;\n    height: var(--headerhight);\n    gap: 10px;\n    margin-left: 45vw;\n}\n\n.aboutTitle, .messageTitle {\n    font-size: max(1rem ,2.5vw);\n}\n\n.msg, .about, .menu{\n    display: block;\n    justify-content: center;\n    padding: 10px;\n    margin-left: 45vw;\n    background-color: rgba(145, 139, 131, 0.51);\n    min-height: 90vh;\n    animation: fadein;\n    animation-duration: 1.2s;\n}\n\n@keyframes fadein {\n    from {color: transparent}\n    to {color: black}\n}\n\n.unchecked, button, .checked {\n    font-family: myfont;\n    border: none;\n    position: relative;\n    cursor: pointer;\n    user-select: none;\n    background-color: transparent;\n    size: 2vw;\n    width: 15vw;\n    font-size: max(1rem ,2.5vw);\n    \n}\n\n.checked {\n    animation-name: check;\n    animation-duration: 1.5s;\n    color: #FFC600;\n}\n\n@keyframes check {\n    from{\n        color:rgb(39, 39, 39)\n    }\n    to{color: #FFC600}\n}\n\n.foodImg {\n    width: 10vw;\n}\n\n.food {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    flex-wrap: nowrap;\n    align-items: center;\n    font-size: max(0.75rem ,1.75vw);\n    min-height: 30vh;\n}\n\n.foodText, .foodTextLast {\n    \n    display: flex;\n    flex: 1;\n    justify-content: center;\n    flex-direction: column;\n}\n\n.foodText:after{\n    content: ""; /* This is necessary for the pseudo element to work. */ \n    display: block; /* This will put the pseudo element on its own line. */\n    margin: 0 auto; /* This will center the border. */\n    width: 50%; /* Change this to whatever width you want. */\n    padding-top: 20px; /* This creates some space between the element and the border. */\n    border-bottom: 1px solid black; /* This creates the border. Replace black with whatever color you want. */\n    animation: fadeinimage;\n    animation-duration: 1.2s;\n}\n\n.foodDescription, .aboutText, .messageText {\n    font-family: myfont2;\n    font-size: max(0.60rem ,1.50vw);\n}\n\nimg {\n    animation: fadeinimage;\n    animation-duration: 1.2s;\n}\n\n@keyframes fadeinimage {\n    from{opacity: 0;}\n    to{opacity: 1;}\n}\n\n\n.aboutText, .messageText {\n    margin-top: 20px;\n}\n\nfooter {\n    position: fixed;\n    font-size: max(0.40rem ,0.8vw);\n    bottom: 0;\n    width: 100vw;\n    display: flex;\n    font-family: myfont;\n    height: var(--footerheight);\n    justify-content: center;\n    border-top: 2px solid black;\n    align-items: center;\n    gap: 20px;\n    background-color: #383838;\n    opacity: 0.9;\n    color: #FFC600;\n}\n\n.footer-img {\n    filter: invert(63%) sepia(61%) saturate(774%) hue-rotate(4deg) brightness(111%) contrast(102%);\n}\n\n.footer-img:hover {\n    transition: transform 0.3s ease-in-out;\n    transform: rotate(360deg) scale(1.4);\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,4CAA6B;AACjC;;AAEA;IACI,sBAAsB;IACtB,4CAA8B;AAClC;;AAEA;IACI,8BAA8B;IAC9B,6BAA6B;AACjC;;;AAGA;IACI,SAAS;IACT,eAAe;IACf,UAAU;IACV,aAAa;AACjB;;AAEA;IACI,yDAA8C;IAC9C,qBAAqB;IACrB,sBAAsB;IACtB,aAAa;IACb,iBAAiB;;AAErB;;AAEA;IACI,mBAAmB;IACnB,iBAAiB;IACjB,YAAY;IACZ,2BAA2B;IAC3B,kBAAkB;IAClB,WAAW;IACX,SAAS;AACb;;AAEA;IACI,2BAA2B;IAC3B,aAAa;IACb,yBAAyB;IACzB,YAAY;IACZ,mBAAmB;IACnB,6BAA6B;IAC7B,mBAAmB;IACnB,0BAA0B;IAC1B,SAAS;IACT,iBAAiB;AACrB;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,cAAc;IACd,uBAAuB;IACvB,aAAa;IACb,iBAAiB;IACjB,2CAA2C;IAC3C,gBAAgB;IAChB,iBAAiB;IACjB,wBAAwB;AAC5B;;AAEA;IACI,MAAM,kBAAkB;IACxB,IAAI,YAAY;AACpB;;AAEA;IACI,mBAAmB;IACnB,YAAY;IACZ,kBAAkB;IAClB,eAAe;IACf,iBAAiB;IACjB,6BAA6B;IAC7B,SAAS;IACT,WAAW;IACX,2BAA2B;;AAE/B;;AAEA;IACI,qBAAqB;IACrB,wBAAwB;IACxB,cAAc;AAClB;;AAEA;IACI;QACI;IACJ;IACA,GAAG,cAAc;AACrB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,iBAAiB;IACjB,mBAAmB;IACnB,+BAA+B;IAC/B,gBAAgB;AACpB;;AAEA;;IAEI,aAAa;IACb,OAAO;IACP,uBAAuB;IACvB,sBAAsB;AAC1B;;AAEA;IACI,WAAW,EAAE,sDAAsD;IACnE,cAAc,EAAE,sDAAsD;IACtE,cAAc,EAAE,iCAAiC;IACjD,UAAU,EAAE,4CAA4C;IACxD,iBAAiB,EAAE,gEAAgE;IACnF,8BAA8B,EAAE,yEAAyE;IACzG,sBAAsB;IACtB,wBAAwB;AAC5B;;AAEA;IACI,oBAAoB;IACpB,+BAA+B;AACnC;;AAEA;IACI,sBAAsB;IACtB,wBAAwB;AAC5B;;AAEA;IACI,KAAK,UAAU,CAAC;IAChB,GAAG,UAAU,CAAC;AAClB;;;AAGA;IACI,gBAAgB;AACpB;;AAEA;IACI,eAAe;IACf,8BAA8B;IAC9B,SAAS;IACT,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,2BAA2B;IAC3B,uBAAuB;IACvB,2BAA2B;IAC3B,mBAAmB;IACnB,SAAS;IACT,yBAAyB;IACzB,YAAY;IACZ,cAAc;AAClB;;AAEA;IACI,8FAA8F;AAClG;;AAEA;IACI,sCAAsC;IACtC,oCAAoC;AACxC",sourcesContent:["@font-face {\n    font-family: 'myfont';\n    src: url('./assets/font.ttf');\n}\n\n@font-face {\n    font-family: 'myfont2';\n    src: url('./assets/font2.ttf');\n}\n\n:root {\n    --footerheight: max(3vh, 30px);\n    --headerhight: max(7vh, 50px);\n}\n\n\nbody {\n    margin: 0;\n    margin-right: 0;\n    padding: 0;\n    height: 100vh;\n}\n\n#content {\n    background-image: url(./assets/background.jpg);\n    background-size:100vw;\n    background-size: cover;\n    height: 100vh;\n    min-height: 400px;\n    \n}  \n\n.body {\n    font-family: myfont;\n    margin-left: 45vw;\n    height: 90vh;\n    font-size: max(1rem ,2.5vw);\n    text-align: center;\n    margin: 0px;\n    gap: 20px;\n}\n\n.header {\n    font-family: MyFont, Roboto;\n    display: flex;\n    background-color: #383838;\n    opacity: 0.9;\n    flex-direction: row;\n    justify-content: space-around;\n    margin-bottom: 10px;\n    height: var(--headerhight);\n    gap: 10px;\n    margin-left: 45vw;\n}\n\n.aboutTitle, .messageTitle {\n    font-size: max(1rem ,2.5vw);\n}\n\n.msg, .about, .menu{\n    display: block;\n    justify-content: center;\n    padding: 10px;\n    margin-left: 45vw;\n    background-color: rgba(145, 139, 131, 0.51);\n    min-height: 90vh;\n    animation: fadein;\n    animation-duration: 1.2s;\n}\n\n@keyframes fadein {\n    from {color: transparent}\n    to {color: black}\n}\n\n.unchecked, button, .checked {\n    font-family: myfont;\n    border: none;\n    position: relative;\n    cursor: pointer;\n    user-select: none;\n    background-color: transparent;\n    size: 2vw;\n    width: 15vw;\n    font-size: max(1rem ,2.5vw);\n    \n}\n\n.checked {\n    animation-name: check;\n    animation-duration: 1.5s;\n    color: #FFC600;\n}\n\n@keyframes check {\n    from{\n        color:rgb(39, 39, 39)\n    }\n    to{color: #FFC600}\n}\n\n.foodImg {\n    width: 10vw;\n}\n\n.food {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    flex-wrap: nowrap;\n    align-items: center;\n    font-size: max(0.75rem ,1.75vw);\n    min-height: 30vh;\n}\n\n.foodText, .foodTextLast {\n    \n    display: flex;\n    flex: 1;\n    justify-content: center;\n    flex-direction: column;\n}\n\n.foodText:after{\n    content: \"\"; /* This is necessary for the pseudo element to work. */ \n    display: block; /* This will put the pseudo element on its own line. */\n    margin: 0 auto; /* This will center the border. */\n    width: 50%; /* Change this to whatever width you want. */\n    padding-top: 20px; /* This creates some space between the element and the border. */\n    border-bottom: 1px solid black; /* This creates the border. Replace black with whatever color you want. */\n    animation: fadeinimage;\n    animation-duration: 1.2s;\n}\n\n.foodDescription, .aboutText, .messageText {\n    font-family: myfont2;\n    font-size: max(0.60rem ,1.50vw);\n}\n\nimg {\n    animation: fadeinimage;\n    animation-duration: 1.2s;\n}\n\n@keyframes fadeinimage {\n    from{opacity: 0;}\n    to{opacity: 1;}\n}\n\n\n.aboutText, .messageText {\n    margin-top: 20px;\n}\n\nfooter {\n    position: fixed;\n    font-size: max(0.40rem ,0.8vw);\n    bottom: 0;\n    width: 100vw;\n    display: flex;\n    font-family: myfont;\n    height: var(--footerheight);\n    justify-content: center;\n    border-top: 2px solid black;\n    align-items: center;\n    gap: 20px;\n    background-color: #383838;\n    opacity: 0.9;\n    color: #FFC600;\n}\n\n.footer-img {\n    filter: invert(63%) sepia(61%) saturate(774%) hue-rotate(4deg) brightness(111%) contrast(102%);\n}\n\n.footer-img:hover {\n    transition: transform 0.3s ease-in-out;\n    transform: rotate(360deg) scale(1.4);\n}"],sourceRoot:""}]);const h=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(r[s]=!0)}for(var A=0;A<n.length;A++){var d=[].concat(n[A]);o&&r[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(a," */"),r=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(r).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},r=[],c=0;c<n.length;c++){var s=n[c],A=o.base?s[0]+o.base:s[0],d=i[A]||0,m="".concat(A," ").concat(d);i[A]=d+1;var l=t(m),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==l)e[l].references++,e[l].updater(u);else{var p=a(u,o);o.byIndex=c,e.splice(c,0,{identifier:m,updater:p,references:1})}r.push(m)}return r}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var i=o(n=n||[],a=a||{});return function(n){n=n||[];for(var r=0;r<i.length;r++){var c=t(i[r]);e[c].references--}for(var s=o(n,a),A=0;A<i.length;A++){var d=t(i[A]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},868:(n,e,t)=>{n.exports=t.p+"8e1b11902208faa4d1cf.jpg"},318:(n,e,t)=>{n.exports=t.p+"71988dd7eaaef16a92b6.ttf"},836:(n,e,t)=>{n.exports=t.p+"18e9b7b36143a965037e.ttf"}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,(()=>{var n=t(379),e=t.n(n),o=t(795),a=t.n(o),i=t(569),r=t.n(i),c=t(565),s=t.n(c),A=t(216),d=t.n(A),m=t(589),l=t.n(m),u=t(426),p={};p.styleTagTransform=l(),p.setAttributes=s(),p.insert=r().bind(null,"head"),p.domAPI=a(),p.insertStyleElement=d(),e()(u.Z,p),u.Z&&u.Z.locals&&u.Z.locals;const f=function(){const n=document.querySelector(".body");n.innerHTML="";const e=document.createElement("div");e.className="msg";const t=document.createElement("div");t.innerHTML="This is the best restaurant ever! \n    </br>WELCOME!",t.className="messageTitle",e.appendChild(t);const o=document.createElement("div");o.className="messageText",o.innerHTML="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",e.appendChild(o),n.appendChild(e)},h=t.p+"39ec8fe852eb40fe73dc.png",C=t.p+"ce89531ad52fedd24d56.png",B=t.p+"0b479cc809d32c0404ff.png",g=t.p+"ecf329c2c06a1f41fae4.png";(function(){const n=document.querySelector("#content"),e=document.createElement("div");n.appendChild(e),e.className="header";const t=document.createElement("button");t.innerText="Home",t.id="homeBtn",e.appendChild(t);const o=document.createElement("button");o.innerText="Menu",o.id="menuBtn",e.appendChild(o);const a=document.createElement("button");a.innerText="About",a.id="aboutBtn",e.appendChild(a)})(),function(){const n=document.querySelector("#content"),e=document.createElement("div");e.innerHTML="",e.className="body",n.appendChild(e),document.getElementById("homeBtn").className="checked"}(),f(),function(){const n=document.querySelector("#content"),e=document.createElement("footer");e.innerHTML=`<p>Copyright © 2022 zsoltizbekk</p>\n    <a href="https://github.com/zsoltizbekk" target="_blank"><img class="footer-img" src="${g}" alt="github" width="20px" height="20px"></a>`,n.appendChild(e)}();const I=document.getElementById("homeBtn"),v=document.getElementById("menuBtn"),b=document.getElementById("aboutBtn");I.addEventListener("click",(function(){I.className="checked",v.className="unchecked",b.className="unchecked",f()})),v.addEventListener("click",(function(){I.className="unchecked",v.className="checked",b.className="unchecked",function(){document.querySelector("#content");const n=document.querySelector(".body");n.innerHTML="";const e=document.createElement("div");e.className="menu";const t=document.createElement("div");t.className="food";const o=document.createElement("div");o.className="foodText",t.appendChild(o);const a=document.createElement("div");a.textContent="PROSCIUTTO",o.appendChild(a);const i=document.createElement("div");i.className="foodDescription",i.textContent="Tomato, mozzarella, brie chesse, porcini mushrooms, ham of Parms, rucola",o.appendChild(i);const r=document.createElement("img");r.src=h,r.className="foodImg",t.appendChild(r),e.appendChild(t);const c=document.createElement("div");c.className="food";const s=document.createElement("div");s.className="foodText",c.appendChild(s);const A=document.createElement("div");A.textContent="PRIMAVERA",s.appendChild(A);const d=document.createElement("div");d.className="foodDescription",d.textContent="Tomato, mozzarella, rucola, fresh tomato",s.appendChild(d);const m=document.createElement("img");m.src=C,m.className="foodImg",c.appendChild(m),e.appendChild(c);const l=document.createElement("div");l.className="food";const u=document.createElement("div");u.className="foodTextLast",l.appendChild(u);const p=document.createElement("div");p.textContent="QUATTRO STAGIONI",u.appendChild(p);const f=document.createElement("div");f.className="foodDescription",f.textContent="Tomato, mozzarella, brie chesse, porcini mushrooms, ham of Parms, rucola",u.appendChild(f);const g=document.createElement("img");g.src=B,g.className="foodImg",l.appendChild(g),e.appendChild(l),n.appendChild(e)}()})),b.addEventListener("click",(function(){I.className="unchecked",v.className="unchecked",b.className="checked",function(){document.querySelector("#content");const n=document.querySelector(".body");n.innerHTML="";const e=document.createElement("div");e.className="about";const t=document.createElement("div");t.innerHTML="About us!",e.appendChild(t);const o=document.createElement("div");o.className="aboutText",o.innerHTML="Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. ",e.appendChild(o),n.appendChild(e)}()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,